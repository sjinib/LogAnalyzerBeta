/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package com.ib.demoFrame;

import com.ib.manager.*;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import org.apache.commons.io.FileUtils;

/**
 *
 * @author sitengjin
 */
public class demoFrame extends javax.swing.JFrame {
    private LogManager manager = new LogManager();
    private File diagnosticFile;
    private boolean isExtracted = false;
    
    private boolean isTwsLogAdded = false;
    private boolean isIbgLogAdded = false;
    private boolean isTwsSettingsAdded = false;
    private boolean isIbgSettingsAdded = false;
    
    /**
     * Creates new form demoFrame
     */
    public demoFrame() {
        initComponents();
        //customInitComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        group = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        configurePane = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        loadDirectory = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        extractDirectory = new javax.swing.JTextField();
        extractBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        logComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        settingsComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        browse1Btn = new javax.swing.JButton();
        browse2Btn = new javax.swing.JButton();
        twsRadio = new javax.swing.JRadioButton();
        ibgRadio = new javax.swing.JRadioButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Log Analyzer");
        setName("mainPanel"); // NOI18N
        setSize(new java.awt.Dimension(0, 0));

        jTabbedPane1.setName(""); // NOI18N

        jPanel1.setName(""); // NOI18N

        jLabel1.setText("Log File Configuration");

        jLabel2.setText("Import downloaded diagnostic zip file:");

        loadDirectory.setText(System.getProperty("user.home").toString());
        loadDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadDirectoryActionPerformed(evt);
            }
        });

        jLabel3.setText("Extract zip file to location:");

        extractDirectory.setText(System.getProperty("user.home").toString() + "\\Temp");
        extractDirectory.setToolTipText("");
        extractDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extractDirectoryActionPerformed(evt);
            }
        });

        extractBtn.setText("Extract");
        extractBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extractBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("TWS/IB Gateway log:");

        logComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logComboBoxActionPerformed(evt);
            }
        });

        jLabel5.setText("Settings File:");

        jLabel6.setText("Or");

        jLabel7.setText("Manually select TWS/IB Gateway log file:");

        jTextField3.setText("directory...");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton2.setText("Load");

        jLabel8.setText("Manually select settings file:");

        jTextField4.setText("directory...");

        jButton3.setText("Load");

        browse1Btn.setText("Browse");
        browse1Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browse1BtnActionPerformed(evt);
            }
        });

        browse2Btn.setText("Browse");
        browse2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browse2BtnActionPerformed(evt);
            }
        });

        group.add(twsRadio);
        twsRadio.setText("TWS");
        twsRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twsRadioActionPerformed(evt);
            }
        });

        group.add(ibgRadio);
        ibgRadio.setText("IB Gateway");
        ibgRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ibgRadioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout configurePaneLayout = new javax.swing.GroupLayout(configurePane);
        configurePane.setLayout(configurePaneLayout);
        configurePaneLayout.setHorizontalGroup(
            configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configurePaneLayout.createSequentialGroup()
                .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(configurePaneLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1))
                    .addGroup(configurePaneLayout.createSequentialGroup()
                        .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(configurePaneLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel6))
                            .addGroup(configurePaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4))
                            .addGroup(configurePaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(logComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(97, 97, 97)
                        .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(settingsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(configurePaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(twsRadio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ibgRadio)
                            .addGroup(configurePaneLayout.createSequentialGroup()
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3))
                            .addGroup(configurePaneLayout.createSequentialGroup()
                                .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(loadDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(extractDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(browse1Btn)
                                    .addComponent(browse2Btn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(extractBtn))
                            .addGroup(configurePaneLayout.createSequentialGroup()
                                .addGap(246, 246, 246)
                                .addComponent(jButton2)))))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        configurePaneLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {extractDirectory, jTextField3, jTextField4, loadDirectory});

        configurePaneLayout.setVerticalGroup(
            configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configurePaneLayout.createSequentialGroup()
                .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(configurePaneLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(loadDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(configurePaneLayout.createSequentialGroup()
                        .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(configurePaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(browse1Btn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(extractDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(extractBtn)
                                    .addComponent(browse2Btn)))
                            .addGroup(configurePaneLayout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(twsRadio)
                            .addComponent(ibgRadio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(logComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(settingsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(53, 53, 53)
                        .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(configurePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jLabel10.setText("Progress:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(configurePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(185, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(configurePane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(49, 49, 49)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Configure", null, jPanel1, "Configure log file locations");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 846, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("TWS Log Filter", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 846, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("API Log Filter", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void customInitComponents(){
        loadDirectory.setText(System.getProperty("user.home").toString());
        extractDirectory.setText(System.getProperty("user.home").toString() + "\\Temp");
    }
    
    private void extractDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractDirectoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_extractDirectoryActionPerformed
    
    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed
    
    private void browse1BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browse1BtnActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            diagnosticFile = fileChooser.getSelectedFile();
            loadDirectory.setText(diagnosticFile.getAbsolutePath().toString());
            extractDirectory.setText(diagnosticFile.getAbsolutePath().toString() + "_extracted");
            manager.setReaderLocation(loadDirectory.getText(), extractDirectory.getText());
        } else if (returnVal == javax.swing.JFileChooser.CANCEL_OPTION){
        } else {
            javax.swing.JOptionPane.showMessageDialog(null, "Failed to find file.");
        }
    }//GEN-LAST:event_browse1BtnActionPerformed
    
    private void loadDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadDirectoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadDirectoryActionPerformed
    
    private void browse2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browse2BtnActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            File directory = fileChooser.getSelectedFile();
            extractDirectory.setText(directory.getAbsolutePath().toString());
            manager.setReaderLocation(null, extractDirectory.getText());
        } else if (returnVal == javax.swing.JFileChooser.CANCEL_OPTION){
        } else {
            javax.swing.JOptionPane.showMessageDialog(null, "Failed to find directory.");
        }
        
    }//GEN-LAST:event_browse2BtnActionPerformed
    
    private void extractBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractBtnActionPerformed
        // TODO add your handling code here:
        File directory = new File(extractDirectory.getText());
        if(directory.isDirectory()){
            int reply = javax.swing.JOptionPane.showConfirmDialog(null, "The directory already exists. Do you want to clear the " + extractDirectory.getText() + " folder first?");
            if(reply == javax.swing.JOptionPane.YES_OPTION){
                try{
                    FileUtils.cleanDirectory(directory); // Clear extract directory
                } catch (IOException e){
                    e.printStackTrace();
                    javax.swing.JOptionPane.showMessageDialog(null, "Failed to clear directory");
                }
            }
            
            extractDirectory.setText(directory.toString());
            manager.setReaderLocation(null, extractDirectory.getText());
            // Initialize tws/ibg log combo box
            logComboBox.removeAllItems();
            isTwsLogAdded = false; 
            isIbgLogAdded = false;
                        
            // Iniatialize settings combo box
            settingsComboBox.removeAllItems();
            isTwsSettingsAdded = false;
            isIbgSettingsAdded = false;
            
            manager.extract();
            isExtracted = true;
            if(twsRadio.isSelected() || ibgRadio.isSelected()){
                // Populate and select log file for combo box
                String[] logList = manager.getLogFileListNames();
                for(String s: logList){
                    logComboBox.addItem(s);
                }
                logComboBox.setSelectedItem(manager.getTodayLogFileName());
                
                // Populate and select settings file for combo box
                String[] settingsList = manager.getSettingsFileListNames();
                for(String s: settingsList){
                    settingsComboBox.addItem(s);
                }
                settingsComboBox.setSelectedItem(manager.getTodaySettingsFileName());
            }
        }
        else {
            int reply = javax.swing.JOptionPane.showConfirmDialog(null, "The directory " + extractDirectory.getText() + " does not exist. Do you want to create it?");
            if(reply == javax.swing.JOptionPane.YES_OPTION){
                directory.mkdir();
                extractDirectory.setText(directory.toString());
                manager.setReaderLocation(null, extractDirectory.getText());
                // Initialize tws/ibg log combo box
                logComboBox.removeAllItems();
                isTwsLogAdded = false; // initialize
                isIbgLogAdded = false;
                
                // Initialize settings file combo box
                settingsComboBox.removeAllItems();
                isTwsSettingsAdded = false;
                isIbgSettingsAdded = false;
                
                manager.extract();
                isExtracted = true;
                if(twsRadio.isSelected() || ibgRadio.isSelected()){
                    // Populate and select log file for combo box
                    String[] logList = manager.getLogFileListNames();
                    for(String s: logList){
                        logComboBox.addItem(s);
                    }
                    logComboBox.setSelectedItem(manager.getTodayLogFileName());
                    
                    // Populate and select settings file for combo box
                    String[] settingsList = manager.getSettingsFileListNames();
                    for(String s: settingsList){
                        settingsComboBox.addItem(s);
                    }
                    settingsComboBox.setSelectedItem(manager.getTodaySettingsFileName());
                }
            }
            else {
                javax.swing.JOptionPane.showMessageDialog(null, "Failed to load directory. Please find a different directory.");
                extractDirectory.setText(System.getProperty("user.home").toString() + "\\Temp");
            }
        }
    }//GEN-LAST:event_extractBtnActionPerformed
    
    private void twsRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twsRadioActionPerformed
        
        manager.setIsTws(true);
        
        // Populate and select log file for combo box
        if(isExtracted == true && isTwsLogAdded == false){
            String[] list = manager.getLogFileListNames();
            if(list == null)
                return;
            
            for(String s: list){
                logComboBox.addItem(s);
            }
            isTwsLogAdded = true;
        }
        logComboBox.setSelectedItem(manager.getTodayLogFileName());
        
        // Populate and select settings file for combo box
        if(isExtracted == true && isTwsSettingsAdded == false){
            String[] list = manager.getSettingsFileListNames();
            if(list == null)
                return;
            
            for(String s: list){
                settingsComboBox.addItem(s);
            }
            isTwsSettingsAdded = true;
        }
        settingsComboBox.setSelectedItem(manager.getTodaySettingsFileName());
    }//GEN-LAST:event_twsRadioActionPerformed
    
    private void ibgRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ibgRadioActionPerformed

        manager.setIsTws(false);
        
        // Populate and select log file for combo box
        if(isExtracted == true && isIbgLogAdded == false){
            String[] list = manager.getLogFileListNames();
            if(list == null)
                return;
            
            for(String s: list){
                logComboBox.addItem(s);
            }
            isIbgLogAdded = true;            
        }
        logComboBox.setSelectedItem(manager.getTodayLogFileName());
        
        // Populate and select settings file for combo box
        if(isExtracted == true && isIbgSettingsAdded == false){
            String[] list = manager.getSettingsFileListNames();
            if(list == null)
                return;
            
            for(String s: list){
                settingsComboBox.addItem(s);
            }
            isIbgSettingsAdded = true;
        }
        settingsComboBox.setSelectedItem(manager.getTodaySettingsFileName());
    }//GEN-LAST:event_ibgRadioActionPerformed
    
    private void logComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logComboBoxActionPerformed
        // TODO add your handling code here:        
        if(logComboBox.getSelectedItem().toString() == null)
            System.out.println("Yes its null");
        manager.selectLogFile(logComboBox.getSelectedItem().toString());
    }//GEN-LAST:event_logComboBoxActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(demoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(demoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(demoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(demoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                demoFrame mainFrame = new demoFrame();
                
                mainFrame.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browse1Btn;
    private javax.swing.JButton browse2Btn;
    private javax.swing.JPanel configurePane;
    private javax.swing.JButton extractBtn;
    private javax.swing.JTextField extractDirectory;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.ButtonGroup group;
    private javax.swing.JRadioButton ibgRadio;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField loadDirectory;
    private javax.swing.JComboBox<String> logComboBox;
    private javax.swing.JComboBox<String> settingsComboBox;
    private javax.swing.JRadioButton twsRadio;
    // End of variables declaration//GEN-END:variables
}
